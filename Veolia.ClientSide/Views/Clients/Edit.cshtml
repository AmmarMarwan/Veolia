@model Veolia.Client

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Client</h4>
        <hr />
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.clientID)

        <div class="form-group">
            @Html.LabelFor(model => model.userId, "userId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("userId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.userId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.clientName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.clientName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.clientName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.clientSurame, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.clientSurame, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.clientSurame, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.clientEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.clientEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.clientEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.clientNumTel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.clientNumTel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.clientNumTel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.clientDateCreation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.clientDateCreation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.clientDateCreation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.clintDateModification, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.clintDateModification, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.clintDateModification, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.adress[0].relationFormAdress[0].adressFacture)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.adress[0].adress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.adress[0].adress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.adress[0].adress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.adress[0].commune, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.adress[0].commune, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.adress[0].commune, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.adress[1].adress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.adress[1].adress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.adress[1].adress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.adress[1].commune, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.adress[1].commune, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.adress[1].commune, "", new { @class = "text-danger" })
                </div>
            </div>

        }
        else
        {

            <div class="form-group">
                @Html.LabelFor(model => model.adress[0].adress, "Adress Intervention ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.adress[0].adress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.adress[0].adress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.adress[0].commune,"Commune Intervention", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.adress[0].commune, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.adress[0].commune, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.adress[1].adress,"Adress Facturation", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.adress[1].adress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.adress[1].adress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                    @Html.LabelFor(model => model.adress[1].commune,"Commune Facturation", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       
                        @Html.EditorFor(model => model.adress[1].commune, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.adress[1].commune, "", new { @class = "text-danger" })
                    </div>
                </div>
        }
        <div class="form-group" style="display: none;">
            @Html.EditorFor(model => model.adress[0], new { htmlAttributes = new { @class = "form-control" } })
            @Html.EditorFor(model => model.adress[1], new { htmlAttributes = new { @class = "form-control" } })
        </div>
               

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
