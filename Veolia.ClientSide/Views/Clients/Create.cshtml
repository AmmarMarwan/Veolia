@model Veolia.Client

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Client</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.userId,labelText: "userId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("userId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.userId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.clientName, labelText: "Nom", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.clientName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.clientName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.clientSurame, labelText: "Prenom", htmlAttributes: new { @class = "control -label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.clientSurame, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.clientSurame, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.clientEmail, labelText: "Email",  htmlAttributes: new { @class = "control -label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.clientEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.clientEmail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.clientNumTel, labelText: "Numero TEL", htmlAttributes: new { @class = "control -label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.clientNumTel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.clientNumTel, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.adress, labelText: "Adress Intervention", htmlAttributes: new { @class = "control -label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.adress[0].adress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.adress[0].adress, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.adress, labelText: "Commune Intervention", htmlAttributes: new { @class = "control -label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "Grenoble",
                        Value = "Grenoble"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Lyon",
                        Value = "Lyon"

                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Jura",
                        Value = "Jura"
                    });
                }
                @Html.DropDownList("Commune Intervention", listItems, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.adress[0].commune, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="checkbox" name="oneAddress" id="oneAddress" value="One Address"> One Address
        <div class="form-group toberemoved">
            @Html.LabelFor(model => model.adress, labelText: "Adress Facturation", htmlAttributes: new { @class = "control -label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.adress[1].adress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.adress[1].adress, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group toberemoved">
            @Html.LabelFor(model => model.adress, labelText: "Commune Facturation", htmlAttributes: new { @class = "control -label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Commune Intervention", listItems, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.adress[1].commune, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
    $("#oneAddress").on("change", function () {
        if (this.checked){
            $(".toberemoved").addClass("hide");
            $(".toberemoved").each(function () {
                $(this).find('input').val('');
            });
        } else {
            $(".toberemoved").removeClass("hide");

        }
    });
</script>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
